const{storeMap:storeMap}=require("../constant"),{notifyUpdate:notifyUpdate}=require("../core"),{cloneObj:cloneObj,isProxyNeeded:isProxyNeeded}=require("../utils");module.exports=function(e,t){t=t||e.constructor.name.toLowerCase();const r=Object.getOwnPropertyNames(e);return storeMap[t]||(storeMap[t]=cloneObj(e,r)),wrapToProxy(e,[t])};const wrapToProxy=(e,t)=>(Object.keys(e).forEach(r=>{isProxyNeeded(e[r])&&(e[r]=wrapToProxy(e[r],t.concat([r])))}),new Proxy(e,{get(e,r){if("__isProxy"===r)return!0;if("__data"===r)return findInStoreMap(t);const o=Reflect.get(e,r)&&Reflect.get(e,r);if(o&&o.__isProxy)return o;const a=findInStoreMap(t.concat([r]));return void 0!==a&&a||o},set(e,r,o){const a=extractPureValue(o),n=isProxyNeeded(a)&&wrapToProxy(cloneObj(a),t.concat([r]))||a,c=Reflect.set(e,r,n);return setValueInStoreMap(t.concat([r]),a),notifyUpdate(),c},deleteProperty:(e,r)=>!!e[r]&&(Reflect.deleteProperty(e,r),deleteKeyInStoreMap(t.concat([r])),notifyUpdate(),!0)})),extractPureValue=e=>Array.isArray(e)?e.map(e=>e&&e.__isProxy&&e.__data||e):e&&e.__isProxy&&e.__data||e,findInStoreMap=e=>e.reduce((e,t)=>"pointsGranted"===t?e:e&&e[t]||void 0,storeMap),setValueInStoreMap=(e,t)=>{const r=e.length,o=e[r-1];let a=storeMap;e.forEach((e,t)=>{t!==r-1&&(a=a[e])}),a[o]=t},deleteKeyInStoreMap=e=>{const t=e.length,r=e[t-1];let o=storeMap;e.forEach((e,r)=>{r!==t-1&&(o=o[e])}),delete o[r]};